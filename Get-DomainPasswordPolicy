function Get-DomainPasswordPolicy {
    Write-Host "`n[+] Retrieving Domain Password Policy..." -ForegroundColor Yellow

    try {
        $domain = [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
        $domainContext = "LDAP://" + $domain.Name
        $domainEntry = New-Object DirectoryServices.DirectoryEntry($domainContext)

        $minPwdLength        = $domainEntry.Properties["minPwdLength"][0]
        $pwdHistoryLength    = $domainEntry.Properties["pwdHistoryLength"][0]
        $maxPwdAge           = $domainEntry.Properties["maxPwdAge"][0]
        $minPwdAge           = $domainEntry.Properties["minPwdAge"][0]
        $lockoutThreshold    = $domainEntry.Properties["lockoutThreshold"][0]
        $lockoutDuration     = $domainEntry.Properties["lockoutDuration"][0]
        $lockoutObservation  = $domainEntry.Properties["lockOutObservationWindow"][0]
        $pwdComplexity       = $domainEntry.Properties["pwdProperties"][0]

        function Format-TimeSpan($timespan) {
            if ($timespan -is [TimeSpan]) {
                if ($timespan.Ticks -eq 0) { return "Not Set" }
                return "$($timespan.Days) days $($timespan.Hours) hours $($timespan.Minutes) minutes"
            } else {
                return "Invalid TimeSpan"
            }
        }

        Write-Host "`n=== [*] Domain Password Policy ===" -ForegroundColor Cyan
        Write-Host "  Minimum Password Length    : $minPwdLength"
        Write-Host "  Password History Length    : $pwdHistoryLength"
        Write-Host "  Maximum Password Age       : $(Format-TimeSpan $maxPwdAge)"
        Write-Host "  Minimum Password Age       : $(Format-TimeSpan $minPwdAge)"
        Write-Host "  Lockout Threshold          : $lockoutThreshold"
        Write-Host "  Lockout Duration           : $(Format-TimeSpan $lockoutDuration)"
        Write-Host "  Observation Window         : $(Format-TimeSpan $lockoutObservation)"
        Write-Host "  Password Complexity Flags  : $pwdComplexity"

        switch ($pwdComplexity) {
            0 { Write-Host "    Complexity Disabled (weak passwords allowed)" -ForegroundColor Red }
            default { Write-Host "    Complexity Enabled (must meet complexity requirements)" -ForegroundColor Green }
        }

    } catch {
        Write-Host "[!] Error retrieving domain password policy: $_" -ForegroundColor Red
    }
}
